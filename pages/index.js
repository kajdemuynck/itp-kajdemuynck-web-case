import Head from 'next/head';
import Image from 'next/image';
import styles from '../styles/Home.module.css';
import { useState, useEffect } from 'react';
import { request } from "../lib/datocms";
import ListOfRecipes from '../components/ListOfRecipes';
import Recommended from '../components/Recommended';

const HOMEPAGE_QUERY = `query HomePage {
  allRecipes(orderBy: name_ASC) {
    id
    name
    slug
    image {
      imageSmall: responsiveImage(imgixParams: {w: "80", h: "80", fit: crop}) {
        src
        srcSet
        webpSrcSet
        width
        title
        height
        base64
        alt
        aspectRatio
        sizes
      }
      imageBig: responsiveImage(imgixParams: {w: "480", h: "320", fit: crop}) {
        src
        srcSet
        webpSrcSet
        width
        title
        height
        base64
        alt
        aspectRatio
        sizes
      }
    }
  }
}`;

export const getStaticProps = async () => {
  const data = await request({
    query: HOMEPAGE_QUERY
  });

  return {
    props: { data }
  };
}

const Home = ({ data }) => {
  const [inputSearch, setInputSearch] = useState('');
  const randomRecipe = data.allRecipes[Math.floor(Math.random() * data.allRecipes.length)];

  // Fetching a large image from one of the recipes
  // useEffect(() => {
  //   const fetchRandomRecipeImg = async () => {
  //     if (!randomRecipe) {
  //       const randomRecipe = data.allRecipes[Math.floor(Math.random() * data.allRecipes.length)];
  //       const copy = {...randomRecipe};
  //       fetch('https://graphql.datocms.com/',
  //         {
  //           method: 'POST',
  //           headers: {
  //             'Content-Type': 'application/json',
  //             'Accept': 'application/json',
  //             'Authorization': `Bearer ${process.env.NEXT_DATOCMS_API_TOKEN}`,
  //           },
  //           body: JSON.stringify({
  //             query: `allRecipes(filter: {id: {eq: ${randomRecipe.id}}}) { image { url } }`
  //           })
  //         }
  //       )
  //       .then(res => res.json())
  //       .then((res) => {
  //         copy.imageUrl = res.data;
  //         setRandomRecipe(copy);
  //       })
  //       .catch((error) => {
  //         console.log(error);
  //       });
  //     }
  //   };
  //   fetchRandomRecipeImg();
  // }, [randomRecipe]);

  // When the user types in the searchbar
  const handleInputSearch = e => {
    const value = e.currentTarget.value;
    setInputSearch(value);
  }

  return (
    <div className={styles.container}>
      <Head>
        <title>ITP web case Kaj De Muynck</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        {/* Title */}
        <h1 className={styles.title}>
          <p className={styles.title__start}>What are you</p>
          <p className={styles.title__end}>eating today?</p>
        </h1>
        
        {/* Searchbar */}
        <input className={styles.searchbar} type="search" value={inputSearch} onChange={handleInputSearch} placeholder="Search" />

        {/* Recommended */}
        <Recommended recipe={randomRecipe} />

        {/* Recipes */}
        <ListOfRecipes data={data} />
      </main>

      {/* Footer */}
      <footer className={styles.footer}>
        <p>&copy; Kaj De Muynck 2021</p>
      </footer>
    </div>
  )
}

export default Home;